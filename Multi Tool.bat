@echo off
title Galaxy V2 - Made by Lilcimbol
chcp 65001 >nul
cls

:start
:: Display the banner and menu togther
call :banner1
call :menu1
goto start :: Keep looping back to the menu instead of exiting

:: Initialize menu index
set menuIndex=1
set totalMenus=3

:banner1
ping localhost -n 2 >nul
echo [91m                      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó     ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  [0m
ping localhost -n 1 >nul 
echo [37m                     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó [0m
ping localhost -n 1 >nul
echo [91m                     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù [0m
ping localhost -n 1 >nul
echo [37m                     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó   ‚ïö‚ñà‚ñà‚ïî‚ïù      ‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù  [0m
ping localhost -n 1 >nul
echo [91m                     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë        ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó [0m
ping localhost -n 1 >nul 
echo [37m                      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù         ‚ïö‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù [0m
goto :eof

:: Menu 1/3 with no banner spam
:menu1
cls
call :banner1
echo %menuIndex%%totalMenus%    [92m                                 press [/] for menu 2  press [\] for menu 3  [0m
:: Menu 1/3 with no banner spam                                                           
echo  [91m     01 : Webhook                         06 : Information                         11 : bot Spammer                    
echo  [92m    02 : Geo Locater                     07 : Phone Number gen                    12 : Lilcimbol Nuker V2
echo  [91m     03 : Pinger                          08 : Ip gen                              13 : Rainbow ip pinger
echo  [92m    04 : Saved stuff                     09 : Matrix Lilcimbol                    14 : proxie checker
echo  [91m     05 : Website Hitter                  10 : Roblox                              15 : Gen token's
echo  [93m
:: Get user option and validate it
echo ‚îå‚îÄ‚îÄ‚îÄ [98m(@userLilcimbol)   
echo ‚îÇ
set /p "option=          ‚îî‚îÄ> "
:: Validate the option input
if "%option%"=="1" (
    goto Webhook
	) else if "%option%"=="2" (
	goto GeoLocater
	) else if "%option%"=="3" (
	goto Pinger
	) else if "%option%"=="4" (
	goto Saved
	) else if "%option%"=="5" (
	goto Website 
	) else if "%option%"=="6" (
	goto Information
	) else if "%option%"=="7" (
	goto Phonegen
	) else if "%option%"=="8" (
	goto Ipgen
	) else if "%option%"=="9" (
	goto Matrix 
) else if "%option%"=="10" (
goto Roblox
) else if "%option%"=="11" (
goto BotSpammer
) else if "%option%"=="12" (
goto menu2
) else if "%option%"=="13" (
goto Rainbow
) else if "%option%"=="14" (
goto proxieChecker
) else if "%option%"=="15" (
goto token
) else if "%option%"=="/" (
goto test
) else if "%option%"=="\" (
goto menu4
) else (
    echo Invalid option. Press any key to try again.
    pause
    goto menu1
)




:banner5
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†û‚†ã‚£©‚°∑‚†ã‚†â‚†â‚†â‚†ô‚†≤‚¢§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚£ø‚£≤‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†∂‚¢§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚£∏‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†â‚†â‚†≥‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£Æ‚°á‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£§‚£è‚°Ä‚†Ä‚†Ä‚†Ä‚†∫‚†è‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ó‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†â‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚†Ä‚£†‚†¥‚†∂‚£ø‚†Ä‚£§‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢£‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ü‚†Å‚†Ä‚†Ä‚£∏‚†ã‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚£á‚†Ä‚†ô‚†É‚†Ä‚¢†‚°ú‚†Å‚£†‚°¥‚†ö‚†Å‚†Ä‚¢Ä‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†à‚†õ‚†í‚†í‚†ö‚¢´‚°∑‚†õ‚†Å‚†Ä‚†Ä‚£§‚†¥‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ô‚¢¶‚£ò‚°ç‚†ì‚£§‚†Ä‚†Ä‚¢Ä‚£º‚†ã‚¢Ä‚£†‚£¥‚£æ‚£Ø‚°æ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚†õ‚¢ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚¢∂‚£ø‚†Ä‚†Ä‚£º‚£ß‚£æ‚£≠‚£æ‚£ø‚¢ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚£§‚£Ä‚†Ä‚£á‚†Ä‚†®‚£ø‚¢≤‚°Ñ‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†≥‚¢ø‚°ø‚£Ø‚£†‚†¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∏‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ß‚°Ç‚£∏‚†ü‚†â‚†Ä‚†Ä‚¢π‚°ö‚†Å‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°ø‚†π‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ø‚£è‚†Ä‚£ø‚¢ø‚£ø‚£ø‚°ü‚¢π‚£ø‚°ø‚†¶‚¢§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†¶‚£§‚£Ñ‚†Ä
echo ‚†Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚¢Ä‚£ò‚°∑‚†Ä‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°Ñ‚†ò‚£è‚†ª‚¢ø‚£á‚¢Ä‚£ø‚°ø‚¢≤‚°ø‚¢ß‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ω‚†Ä
echo ‚¢∏‚£ü‚°â‚†ô‚°ü‚†ã‚£Ä‚†Ä‚£∞‚£º‚£ó‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£á‚†Ä‚†à‚†õ‚†≤‚£¨‚°Ω‚†∑‚£æ‚£ö‚†õ‚£æ‚°á‚†ô‚£á‚£Ä‚£†‚†§‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚†ö‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†ü‚†â‚†Å‚†Ä‚†Ä
echo ‚†à‚†õ‚¢ø‚†Ä‚°Ü‚†Ä‚°ø‚¢ø‚£Å‚£Ä‚°ö‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£§‚†§‚†ñ‚†ö‚†â‚†Ä‚†Ä‚£á‚†â‚†ô‚†ö‚†õ‚¢ø‚£ç‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£¶‚†¥‚†í‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚¢∏‚£Ü‚†ô‚†ö‚†â‚†à‚†â‚†â‚¢†‚£è‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£†‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†ª‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ì‚†∂‚†æ‚†≠‚£Ω‚°Ñ‚†Ä‚†â‚†ô‚†≤‚¢¶‚°§‚†¥‚†í‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£Ü‚†Ä‚†Ä‚†Ä‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°∞‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢≥‚°Ñ‚†Ä‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†ì‚†ß‚£Ñ‚°Ä‚£Ä‚°§‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†Ä‚†Ä‚†Ä‚£∞‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ë‚†≤‚†¶‚†§‚£§‚†§‚£æ‚¢Å‚£Ä‚†¥‚†é‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†§‚†æ‚†ü‚†í‚†≤‚†∂‚†¶‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†ã‚°è‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°§‚†û‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†â‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢§‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†≥‚£Ñ‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°û‚†õ‚†õ‚¢ª‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢∑‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°ü‚¢ª‚°Ä‚†Ä‚†∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†õ‚£Ñ‚†Ä‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚°Ä‚†Ä‚†à‚†≥‚£¨‚°≥‚£∂‚†¢‚†§‚†§‚†§‚£§‚£§‚°§‚†§‚†§‚†ñ‚†ö‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∑‚°Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚°æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£§‚†Ä‚†Ä‚£Ä‚£Ä‚£§‚£ø‚£¶‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†¥‚¢´‚°ø‚†≥‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚°º‚†à‚†ì‚†¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚†¥‚†õ‚†Å‚¢Ä‚°º‚£Ñ‚†Ä‚†à‚†≥‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°§‚†¥‚†í‚†õ‚†õ‚£ª‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†õ‚†í‚†í‚†í‚†í‚†ö‚£ª‚†â‚†Å‚†Ä‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†ò‚†≥‚£Ñ‚†Ä‚†Ä‚†à‚†õ‚†¶‚¢§‚£Ä‚£Ä‚£º‚†É‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£Ø‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ß‚£§‚†Ä‚†Ä‚†à‚†õ‚†≤‚¢§‚£Ñ‚°Ä‚†Ä‚¢Ä‚°ø‚†Å‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚°ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†∂‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ë‚†∂‚†∂‚†∂‚†∂‚†∂‚†í‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢≥‚£Ä‚†Ä‚£Ä‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚°Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚£â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä	
goto :eof

 
:Webhook
cls
call :banner5
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë       Discord webhook spammer       ‚ïë
echo ‚ïë          Made By Lilcimbol          ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.
echo.
set /p "num_webhooks=  ‚îÇ [? Lilcimbol bot ?] ‚îÇ  How many webhooks:  "
set /p "message=       ‚îÇ [? Lilcimbol bot ?] ‚îÇ  Message: "
set /p "num_times=     ‚îÇ [? Lilcimbol bot ?] ‚îÇ  How many:  "
set /p "delay=         ‚îÇ [? Lilcimbol bot ?] ‚îÇ  Delay:  "

:: Collect the webhooks from the user dynamically
setlocal enabledelayedexpansion
for /L %%i in (1,1,%num_webhooks%) do (
    set /p "webhook=  ‚îÇ [? Lilcimbol bot ?] ‚îÇ  Url for Webhook %%i: "
    set "webhook[%%i]=!webhook!"
)

:: Add the "Connecting to the webhook" message before starting
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë   Connecting to the webhooks   ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
timeout /t 2 >nul

:: Loop to send the message the specified number of times
for /L %%n in (1,1,%num_times%) do (
    for /L %%i in (1,1,%num_webhooks%) do (
        start "" /B curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"%message%\"}" !webhook[%%i]!
        timeout /t %delay% >nul
    )
)

echo Done
pause
cls
goto start
goto :eof


:banner2
echo.
echo.
echo.
echo                                ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
echo                                ‚îÇ  ‚ñ™  ‚ñÑ‚ñÑ‚ñÑ¬∑    ‚ñÑ‚ñÑ‚ñå               ‚ñÑ ‚Ä¢‚ñÑ ‚ñÑ‚Ä¢ ‚ñÑ‚ñå‚ñÑ‚ñÑ‚ñÑ¬∑   ‚îÇ
echo                                ‚îÇ ‚ñà‚ñà ‚ñê‚ñà ‚ñÑ‚ñà    ‚ñà‚ñà‚Ä¢  ‚ñ™     ‚ñ™      ‚ñà‚ñå‚ñÑ‚ñå ‚ñà‚ñ™‚ñà‚ñà‚ñê‚ñà ‚ñÑ‚ñà   ‚îÇ
echo                                ‚îÇ ‚ñê‚ñà¬∑‚ñà‚ñà‚ñÄ¬∑     ‚ñà‚ñà‚ñ™   ‚ñÑ‚ñà‚ñÄ‚ñÑ  ‚ñÑ‚ñà‚ñÄ‚ñÑ ‚ñê‚ñÄ‚ñÄ‚ñÑ¬∑ ‚ñà‚ñå‚ñê‚ñà‚ñå‚ñà‚ñà‚ñÄ    ‚îÇ
echo                                ‚îÇ ‚ñê‚ñà‚ñå‚ñê‚ñà‚ñ™¬∑‚Ä¢    ‚ñê‚ñà‚ñå‚ñê‚ñå‚ñê‚ñà‚ñå.‚ñê‚ñå‚ñê‚ñà‚ñå.‚ñê‚ñå‚ñê‚ñà.‚ñà‚ñå ‚ñê‚ñà‚ñÑ‚ñà‚ñå‚ñê‚ñà‚ñ™¬∑‚Ä¢  ‚îÇ
echo                                ‚îÇ ‚ñÄ‚ñÄ‚ñÄ.‚ñÄ       .‚ñÄ‚ñÄ‚ñÄ  ‚ñÄ‚ñà‚ñÑ‚ñÄ‚ñ™ ‚ñÄ‚ñà‚ñÑ‚ñÄ‚ñ™¬∑‚ñÄ  ‚ñÄ  ‚ñÄ‚ñÄ‚ñÄ .‚ñÄ     ‚îÇ  
echo                                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
echo.
echo.
echo.
echo       ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo       ‚ïë             ‚ïë
echo       ‚ïë             ‚ïë
echo       ‚ïë             ‚ïë
echo       ‚ïë             ‚ïë
echo       ‚ïë             ‚ïë
echo       ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo      /:::::::::::::::\
echo     /:::‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê:::\
echo     ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
goto :eof



:GeoLocater
cls

call :banner2
echo.
set /p ip=IP Address: 
cls
setlocal ENABLEDELAYEDEXPANSION
set webclient=webclient
if exist "%temp%\%webclient%.vbs" del "%temp%\%webclient%.vbs" /f /q /s >nul
if exist "%temp%\response.txt" del "%temp%\response.txt" /f /q /s >nul
:iplookup
echo sUrl = "http://ipinfo.io/%ip%/json" > %temp%\%webclient%.vbs
:localip
cls
echo set oHTTP = CreateObject("MSXML2.ServerXMLHTTP.6.0") >> %temp%\%webclient%.vbs
echo oHTTP.open "GET", sUrl,false >> %temp%\%webclient%.vbs
echo oHTTP.setRequestHeader "Content-Type", "application/x-www-form-urlencoded" >> %temp%\%webclient%.vbs
echo oHTTP.setRequestHeader "Content-Length", Len(sRequest) >> %temp%\%webclient%.vbs
echo oHTTP.send sRequest >> %temp%\%webclient%.vbs
echo HTTPGET = oHTTP.responseText >> %temp%\%webclient%.vbs
echo strDirectory = "%temp%\response.txt" >> %temp%\%webclient%.vbs
echo set objFSO = CreateObject("Scripting.FileSystemObject") >> %temp%\%webclient%.vbs
echo set objFile = objFSO.CreateTextFile(strDirectory) >> %temp%\%webclient%.vbs
echo objFile.Write(HTTPGET) >> %temp%\%webclient%.vbs
echo objFile.Close >> %temp%\%webclient%.vbs
echo Wscript.Quit >> %temp%\%webclient%.vbs
start %temp%\%webclient%.vbs
set /a requests=0
:checkresponseexists
set /a requests=%requests% + 1
if %requests% gtr 7 goto failed
IF EXIST "%temp%\response.txt" (
goto response_exist
) ELSE (
ping 127.0.0.1 -n 2 -w 1000 >nul
goto checkresponseexists
)
:failed
taskkill /f /im wscript.exe >nul
del "%temp%\%webclient%.vbs" /f /q /s >nul
echo.
echo Did not receive a response from the API.
echo.
pause
goto menu
:response_exist
cls
echo.
for /f "delims=     " %%i in ('findstr /i "," %temp%\response.txt') do (
    set data=%%i
    set data=!data:,=!
    set data=!data:""=Not Listed!
    set data=!data:"=!
    set data=!data:ip:=IP:      !
    set data=!data:hostname:=Hostname:  !
    set data=!data:org:=ISP:        !
    set data=!data:city:=City:      !
    set data=!data:region:=State:   !
    set data=!data:country:=Country:    !
    set data=!data:postal:=Postal:  !
    set data=!data:loc:=Location:   !
    set data=!data:timezone:=Timezone:  !
    echo !data!
)
echo.
:: Generate a more realistic fake phone number
set /a area_code1=%random% %% 8 + 2   :: First digit of area code (2-9)
set /a area_code2=%random% %% 10 + 1   :: Second digit of area code (0-9)
set /a area_code3=%random% %% 10 + 1   :: Third digit of area code (0-9)
set /a prefix1=%random% %% 8 + 2       :: First digit of prefix (2-9)
set /a prefix2=%random% %% 10 + 1      :: Second digit of prefix (0-9)
set /a prefix3=%random% %% 10 + 1      :: Third digit of prefix (0-9)
set /a line1=%random% %% 10 + 1        :: First digit of line (0-9)
set /a line2=%random% %% 10 + 1        :: Second digit of line (0-9)
set /a line3=%random% %% 10000 + 1000  :: Last 4 digits (100-999)

set fakephone=!area_code1!!area_code2!!area_code3!-!prefix1!!prefix2!!prefix3!-!line1!!line2!!line3!
echo number: !fakephone!
del "%temp%\%webclient%.vbs" /f /q /s >nul
del "%temp%\response.txt" /f /q /s >nul
if '%ip%'=='' goto menu
pause    ### Added to prevent instant closure
timeout /t 60 /nobreak >nul
goto :menu1




:banner3
echo.
echo.
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ê‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†á‚†Ä‚†Ä‚†Ä‚†ò‚°Ü‚†Ä‚†Ä‚†ê‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚†¢‚¢º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†é‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£á‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚†Ä‚†Ä‚°∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°º‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†Ä‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚°á‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚£∞‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ã‚†Ä‚†Ä‚†ò‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°û‚†Å‚†Ä‚°ø‚£Ø‚°∑‚°¥‚¢¶‚£§‚°†‚£∂‚°∂‚†Ä‚¢∑‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£•‚£§‚£§‚£§‚£§‚£§‚£§‚£§‚£Ä‚£Ä‚£Ä‚£Ä‚†Ä‚†à‚¢ß‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†õ‚¢¶‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚†≥‚†Ä‚¢≥‚°Ä‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚°á‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚°û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚°ø‚†ò‚†Ä‚†Ä‚†π‚£º‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†á‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚£∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚¢†‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚°æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°æ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚†Ä‚†Ä‚°ü‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚£¥‚†ì‚£æ‚£≥‚£Ä‚¢Ä‚°º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°á‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚¢Ä‚†á‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†ë‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚°á‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†π‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚£æ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚¢≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°á‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†É‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚¢Ä‚°á‚¢π‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†â‚†ì‚†∂‚¢Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚†¥‚†ã‚†£‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ü‚£∏‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚£¥‚£ø‚†ã‚†ò‚£Ü‚†Ä‚¢∞‚†∂‚†§‚¢ç‚£õ‚£∂‚†§‚†ø‚£∑‚£¶‚°Ä‚†í‚†ö‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†¢‚†§‚°Ñ‚†Ä‚†Ä‚¢Ä‚°¥‚¢Ø‚†¥‚£≥‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†â‚†Ä‚†Ä‚†ò‚¢¶‚°à‚†ª‚£ñ‚†§‚£§‚£â‚£â‚£π‚£Ø‚£≠‚†â‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£æ‚†õ‚£´‚£º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ë‚£Ñ‚†â‚¢¶‚°Ä‚†Ä‚†Ä‚†à‚†â‚†Å‚†Ä‚†Ä‚£∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚¢ø‚£∑‚¢ö‚°ù‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚¢∂‚£∑‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚†∑‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
echo ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä







ping localhost -n 2 >nul
echo [44m      				    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  [0m
ping localhost -n 1 >nul 
echo [44m     				    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó [0m
ping localhost -n 1 >nul
echo [44m      				    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù [0m
ping localhost -n 1 >nul
echo [44m      				    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó [0m
ping localhost -n 1 >nul
echo [44m     				    ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë [0m
ping localhost -n 1 >nul
echo [44m      				    ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù [0m
goto :eof



:Pinger
cls
call :banner3
echo.
echo.
setlocal enabledelayedexpansion
color c

:: Prompt for IPs and ping count
set /p "IP=    [? lilcimbol bot ?] | Enter Ip use comma for second: "
set /p "COUNT= [? lilcimbol bot ?] | How many times U want to ping: "
cls
:: Check internet by pinging Google's DNS first
ping 8.8.8.8 -n 1 >nul 2>&1
IF ERRORLEVEL 1 (
    echo Internet is DOWN. Unable to reach 8.8.8.8.
) ELSE (
    echo Internet is UP. Successfully reached 8.8.8.8.
)

:: Split the comma-separated IPs into individual IPs and loop through each
for %%A in (%IP%) do (
    echo Pinging IP: %%A for %COUNT% attempts...

    :: Loop through the number of pings to the provided IP
    for /l %%i in (1,1,%COUNT%) do (
        echo Pinging %%A... Attempt %%i
        ping %%A -n 1 >nul 2>&1  :: Ping once and suppress output
        
        :: Check if the ping was successful and print result
        IF ERRORLEVEL 1 (
            echo Attempt %%i: %%A [ lilcimbol bot ] NIGGER OFFLINE!
        ) ELSE (
            echo Attempt %%i: %%A [ lilcimbol bot ] NIGGER ONLINE!
			cls
        )
    )
)

:: Optional: Ping 127.0.0.1 continuously (can be removed if not needed)
ping -t 127.0.0.1 >nul
cls
echo Fuck that nigga he gone Like his dad?
pause
goto start


:Saved
cls
echo ---------------
echo Emmett: 24.88.206.166
echo AAron: 24.88.206.166 
echo ---------------
echo.
pause
goto start

:Website
setlocal enabledelayedexpansion
color f

:: Clear the screen at the start (optional, use carefully)
cls

:: Prompt for Website URL and ping count
set /p WEBSITE=" [? lilcimbol bot ?] | website:  "
set /p COUNT=" [? lilcimbol bot ?] | how many times: "

:: Check internet by pinging Google's DNS first
ping 8.8.8.8 -n 1 >nul 2>&1
IF ERRORLEVEL 1 (
    echo Internet is DOWN. Unable to reach 8.8.8.8.
) ELSE (
    echo Internet is UP. Successfully reached 8.8.8.8.
)

:: Loop through the number of pings to the provided website (without unnecessary output)
for /l %%i in (1,1,%COUNT%) do (
    echo Pinging %WEBSITE%... Attempt %%i
    ping %WEBSITE% -n 1 >nul 2>&1  :: Ping once and suppress output
    
    :: Check if the ping was successful and print result
    IF ERRORLEVEL 1 (
        echo Attempt %%i: %WEBSITE% OFFLINE
    ) ELSE (
        echo Attempt %%i: %WEBSITE% ONLINE
    )
)

:: Optional: Ping 127.0.0.1 continuously (can be removed if not needed)
ping -t 127.0.0.1 >nul
pause
goto start


:Information
cls
setlocal enabledelayedexpansion

:: Create a temporary file to capture the output
set "tempFile=%temp%\computer_info.txt"

:: Get the computer name using PowerShell
powershell -Command "(Get-ComputerInfo).CsName" > "%tempFile%"
set /p "computerName="<"%tempFile%"

:: Get the logged-in user name using PowerShell
powershell -Command "(Get-WmiObject -Class Win32_ComputerSystem).UserName" > "%tempFile%"
set /p "userName="<"%tempFile%"

:: Generate a random "code" (alphanumeric)
set "code="
for /L %%c in (1,1,10) do (
    set /a "randomChar=!random! %% 62"
    if !randomChar! lss 10 (
        set "char=!randomChar!"
    ) else if !randomChar! lss 36 (
        set "char=!randomChar!"
        set "char=!char: =A!"
    ) else (
        set "char=!randomChar!"
        set "char=!char: =a!"
    )
    set "code=!code!!char!"
)

:: Get network adapter details using PowerShell
powershell -Command "Get-NetAdapter | Select-Object -ExpandProperty Name" > "%tempFile%"
set /p "adapterName="<"%tempFile%"

:: Get IPv4 and IPv6 addresses using PowerShell
powershell -Command "Get-NetIPAddress | Where-Object {$_.AddressFamily -eq 'IPv4'} | Select-Object -ExpandProperty IPAddress" > "%tempFile%"
set /p "ipv4Address="<"%tempFile%"

powershell -Command "Get-NetIPAddress | Where-Object {$_.AddressFamily -eq 'IPv6'} | Select-Object -ExpandProperty IPAddress" > "%tempFile%"
set /p "ipv6Address="<"%tempFile%"

:: Handle if any values are empty
if not defined computerName set "computerName=Not available"
if not defined userName set "userName=Not available"
if not defined adapterName set "adapterName=Not available"
if not defined ipv4Address set "ipv4Address=Not available"
if not defined ipv6Address set "ipv6Address=Not available"

:: Print the information in a boxed format
echo ================================
echo =        Computer Info         =
echo ================================
echo Adapter name:  %adapterName%
echo Computer Name: %computerName%
echo Username: %userName%
echo Code: %code%
echo IPv4 address: %ipv4Address%
echo IPv6 address: %ipv6Address%
echo ================================
pause

:Phonegen
cls
setlocal enabledelayedexpansion

:: Ask for the number of phone numbers to generate
set /p "num= [? lilcimbol bot ?] | How many:  "

:: Loop to generate the phone numbers
for /L %%i in (1,1,%num%) do (
    set "phone="
    
    :: Generate first 3 digits (area code)
    for /L %%j in (1,1,3) do (
        set /a "randomDigit=!random! %% 10"
        set "phone=!phone!!randomDigit!"
    )
    set "phone=!phone!) "
    
    :: Generate second part (next 3 digits)
    for /L %%j in (1,1,3) do (
        set /a "randomDigit=!random! %% 10"
        set "phone=!phone!!randomDigit!"
    )
    set "phone=!phone! "
    
    :: Generate third part (last 4 digits)
    for /L %%j in (1,1,4) do (
        set /a "randomDigit=!random! %% 10"
        set "phone=!phone!!randomDigit!"
    )

    :: Output the formatted phone number
    echo Phone Number %%i: (!phone!)
)
pause
goto start


:IpGen
cls
setlocal enabledelayedexpansion

:: Ask the user how many IPs they want to generate and check
set /p "count= [? lilcimbol ?] | How Many?: "

:: Loop to generate the specified number of IPs
for /L %%i in (1,1,%count%) do (
    set /a "part1=!random! %% 256"
    set /a "part2=!random! %% 256"
    set /a "part3=!random! %% 256"
    set /a "part4=!random! %% 256"

    :: Generate the IP address
    set "ip=!part1!.!part2!.!part3!.!part4!"

    :: Ping the generated IP and check if it's reachable
    ping -n 1 !ip! > nul
    if !errorlevel! == 0 (
        echo Working IP: !ip!
    ) else (
        echo !ip! is not reachable.
    )
)

pause
goto start





:Matrix
cls
color a
mode 500
pause
:a

echo %random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%
goto a

:Roblox
:GetRobloxAccountCreationDate
cls
set /p username=Enter the Roblox username: 

:: Use Roblox API to get user information by username (first, we will search for the username to get the userId)
echo Fetching user data for %username%...
curl -s "https://users.roblox.com/v1/users/search?keyword=%username%" > user.json

:: Parse the userId from the JSON response (this assumes there's one user returned)
for /f "delims=" %%i in ('findstr /c:""id"" user.json') do set userId=%%i

:: Extract the userId number (this is to strip out the "id": value part)
for /f "tokens=2 delims=:" %%a in ("%userId%") do set userId=%%a
set userId=%userId:~1,-1%

:: Check if userId is empty (meaning user wasn't found)
if "%userId%"=="" (
    echo User not found.
    pause
    goto MENU
)

:: Now, fetch the creation date using the userId with the correct API endpoint
echo Fetching creation date for userId: %userId%...
curl -s "https://users.roblox.com/v1/users/%userId%" > user_info.json

:: Extract the creation date from the user_info.json file
for /f "delims=" %%i in ('findstr /c:""created"" user_info.json') do set creationDate=%%i

:: Check if creationDate is found and process it
if defined creationDate (
    :: Extract the date value (the format is "created": "YYYY-MM-DDTHH:MM:SSZ")
    for /f "tokens=2 delims=:" %%a in ("%creationDate%") do set creationDate=%%a
    set creationDate=%creationDate:~2,-2%
    echo The Roblox account "%username%" was created on: %creationDate%
) else (
    echo Could not retrieve the creation date for the user.
)

:: Cleanup
del user.json
del user_info.json

pause
goto MENU





:proxieChecker
setlocal enabledelayedexpansion

:: Ask the user for how many IPs they want to check
set /p num_ips=How many: 

:: Initialize the counter
set /a counter=0
set working_ips=

:: Loop to get the IP addresses
:input_ips
if %counter% geq %num_ips% goto check_ips
set /p IP=IP address #%counter%: 
set IPs[%counter%]=%IP%
set /a counter+=1
goto input_ips

:: Check each IP for availability
:check_ips
echo Checking IPs...
for /L %%i in (0,1,%num_ips%-1) do (
    ping -n 1 !IPs[%%i]! > nul
    if !errorlevel! == 0 (
        echo IP !IPs[%%i]! is working.
        set working_ips=!working_ips!!IPs[%%i]! 
    ) else (
        echo IP !IPs[%%i]! is non-working.
    )
)

:: Display all working IPs
echo Working IPs: !working_ips!

pause








:banner6


echo. 
echo.
echo    ‚ñÑ     ‚ñÑ   ‚ñà  ‚ñà‚ñÄ ‚ñÑ‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ 
echo     ‚ñà     ‚ñà  ‚ñà‚ñÑ‚ñà   ‚ñà‚ñÄ   ‚ñÄ  ‚ñà  ‚ñÑ‚ñÄ 
echo ‚ñà‚ñà   ‚ñà ‚ñà   ‚ñà ‚ñà‚ñÄ‚ñÑ   ‚ñà‚ñà‚ñÑ‚ñÑ    ‚ñà‚ñÄ‚ñÄ‚ñå  
echo ‚ñà ‚ñà  ‚ñà ‚ñà   ‚ñà ‚ñà  ‚ñà  ‚ñà‚ñÑ   ‚ñÑ‚ñÄ ‚ñà  ‚ñà  
echo ‚ñà  ‚ñà ‚ñà ‚ñà‚ñÑ ‚ñÑ‚ñà   ‚ñà   ‚ñÄ‚ñà‚ñà‚ñà‚ñÄ     ‚ñà   
echo ‚ñà   ‚ñà‚ñà  ‚ñÄ‚ñÄ‚ñÄ   ‚ñÄ             ‚ñÄ    
echo.
echo.
goto :eof

:menu2
cls
call :banner6
echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë         Lilcimbol Nuke Bot          ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

:: Get user input
set /p GUILD_ID="         ‚îÇ [? Lilcimbol bot ?] ‚îÇ Server ID: "              [0m
set /p TOKEN="            ‚îÇ [? Lilcimbol bot ?] ‚îÇ Enter bot token: "        [0m
set /p CHANNEL_COUNT="    ‚îÇ [? Lilcimbol bot ?] ‚îÇ How many channels: "      [0m
set /p CHANNEL_NAME="     ‚îÇ [? Lilcimbol bot ?] ‚îÇ Name of channels: "       [0m
set /p MESSAGE="          ‚îÇ [? Lilcimbol bot ?] ‚îÇ Message: "                [0m
set /p IMAGE_URL="        ‚îÇ [? Lilcimbol bot ?] ‚îÇ URL of the image: "       [0m
set /p NEW_NICKNAME="     ‚îÇ [? Lilcimbol bot ?] ‚îÇ New nickname: "           [0m

:: Debugging - output only the guild ID and number of channels (never print the token)
echo Debug: GUILD_ID=%GUILD_ID%
echo Debug: Channels to create: %CHANNEL_COUNT%
echo Debug: Image URL: %IMAGE_URL%
echo Debug: New Nickname: %NEW_NICKNAME%
pause
cls

:: Download the image from the URL
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Downloading the image from URL...
curl -L "%IMAGE_URL%" -o "server_icon.png"

:: Base64 encode the image
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Encoding the image to Base64...
certutil -encode "server_icon.png" "server_icon.b64" >nul 2>&1

:: Read the Base64 content from the encoded file and store it in a variable
set /p BASE64_IMAGE=<"server_icon.b64"

:: Remove unwanted lines from Base64 output (certutil adds some extra lines that need to be removed)
set BASE64_IMAGE=%BASE64_IMAGE:~1%

:: Debugging - output the Base64 content (for checking purposes)
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Base64 encoded image: %BASE64_IMAGE%
pause

:: Update the server icon via the Discord API
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Changing server icon...
curl -X PATCH "https://discord.com/api/v10/guilds/%GUILD_ID%" ^
    -H "Authorization: Bot %TOKEN%" ^
    -H "Content-Type: application/json" ^
    -d "{\"icon\":\"%BASE64_IMAGE%\"}" >nul 2>&1

echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Server icon updated successfully!

:: Fetch the list of members (Paginated, if necessary)
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Fetching member list...
curl -X GET "https://discord.com/api/v10/guilds/%GUILD_ID%/members?limit=1000" ^
    -H "Authorization: Bot %TOKEN%" > members.json

:: Loop through members and update their nicknames
for /F "tokens=*" %%A in (members.json) do (
    set member=%%A
    for /F "delims=:," %%B in ("%%A") do set user_id=%%B

    :: Update the user's nickname
    echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Changing nickname for user: %%B
    curl -X PATCH "https://discord.com/api/v10/guilds/%GUILD_ID%/members/%%B" ^
        -H "Authorization: Bot %TOKEN%" ^
        -H "Content-Type: application/json" ^
        -d "{\"nick\":\"%NEW_NICKNAME%\"}" >nul 2>&1
)

echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ All member nicknames updated successfully!

:: Loop to create multiple channels
for /L %%i in (1,1,%CHANNEL_COUNT%) do (
    echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Creating channel: %CHANNEL_NAME%%%i
    curl -X POST "https://discord.com/api/v10/guilds/%GUILD_ID%/channels" ^
        -H "Authorization: Bot %TOKEN%" ^
        -H "Content-Type: application/json" ^
        -d "{\"name\": \"%CHANNEL_NAME%%%i\", \"type\": 0}" >nul 2>&1
)

cls
echo.
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ Nuked that dumb ass server
echo ‚îÇ [? Lilcimbol bot ?] ‚îÇ wanna @everyone? press 1
pause
goto start

:Rainbow
@echo off
color c
cls
echo               ...                                
echo              ;::::;                              
echo            ;::::; :;                              
echo          ;:::::'   :;                             
echo         ;:::::;     ;.                            
echo        ,:::::'       ;           OOO\           
echo        ::::::;       ;          OOOOO\            
echo        ;:::::;       ;         OOOOOOOO           
echo       ,;::::::;     ;'         / OOOOOOO          
echo     ;:::::::::`. ,,,;.        /  / DOOOOOO        
echo   .';:::::::::::::::::;,     /  /     DOOOO     
echo  ,::::::;::::::;;;;::::;,   /  /        DOOO     
echo ;`::::::`'::::::;;;::::: ,#/  /          DOOO   
echo :`:::::::`;::::::;;::: ;::#  /            DOOO   
echo ::`:::::::`;:::::::: ;::::# /              DOO   
echo `:`:::::::`;:::::: ;::::::#/               DOO
echo  :::`:::::::`;; ;:::::::::##                OO
echo  ::::`:::::::`;::::::::;:::#                OO
echo  `:::::`::::::::::::;'`:;::#                O
echo   `:::::`::::::::;' /  / `:#
echo    ::::::`:::::;'  /  /   `#                                                                                                                                 
set /p IP=Enter THE IP ADDRESS:  
echo.
:rainbow1
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 01
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 02
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 03
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 04
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 05
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 06
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 07
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 08
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 09
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 0b
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 0c
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 0d
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 0e
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
color 0f
PING -n 1 %IP% | FIND "TTL="
IF ERRORLEVEL 1 (SET in=c & echo %IP% Smacked By Lilcimbol)
goto rainbow1
